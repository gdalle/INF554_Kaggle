print(coeffRV(student_wine,expert_wine)$p.value)
test_ce = permutation_test_rv(consumer_wine,expert_wine)
print(test_ce$plot)
print(test_ce$p_value)
print(coeffRV(consumer_wine,expert_wine)$p.value)
permutation_test_rv <- function(X,Y){
aux <- function(){
myX = X[sample.int(nrow(X)),]
return(coeffRV(myX,Y)$rv)
}
RV_distrib = as.data.frame(sapply(c(1:10000),function(i) aux()))
colnames(RV_distrib)[1] <- "RV"
rv <- coeffRV(X,Y)$rv
plot <- ggplot(RV_distrib)+aes(x=RV,y=..density..)+geom_density()+ylab("")+geom_vline(xintercept = rv)
p_value <- mean(RV_distrib$RV>=rv)
return(list(p_value=p_value,plot=plot))
}
test_sc = permutation_test_rv(student_wine,consumer_wine)
print(test_sc$plot)
print(test_sc$p_value)
print(coeffRV(student_wine,consumer_wine)$p.value)
test_se = permutation_test_rv(student_wine,expert_wine)
print(test_se$plot)
print(test_se$p_value)
print(coeffRV(student_wine,expert_wine)$p.value)
test_ce = permutation_test_rv(consumer_wine,expert_wine)
print(test_ce$plot)
print(test_ce$p_value)
print(coeffRV(consumer_wine,expert_wine)$p.value)
rep(1,5)
p = 5
I = diag(p)
K = diag(p) %*% rep(1,p)
I
K
K = rep(rep(1,p),p)
K
K = outer(rep(1,p),rep(1,p))
K
?rmwnorm
?rmvnorm
library(energy)
?dcov.test
aux <- function(i){}
aux <- function(i){return(list(1,2))}
f = sapply(c(1:100),aux)
f
f[1]
f[2]
f[[2]]
f[[1]]
aux <- function(i){return(c(1,2))}
aux
aux()
aux()
aux()
aux()
f = sapply(c(1:100),aux)
fr
f
f[1,]
f[2,]
library(energy)
p <- 5
q<-5
I <- diag(p+q)
K <- outer(rep(1,p+q),rep(1,p+q))
cov <- .9*I+.1*K
estim_puissance_test <- function(n){
aux <- function(i){
XY <- rmvnorm(n,sigma=cov)
X <- XY[,c(1:p)]
Y <- XY[,c(p+1:p+q)]
return(c(dcov.test(X,Y)$p.value,coeffRV(X,Y)$p.value))
}
foo <- sapply(c(1:1000),aux)
p_dcov <- mean(foo[1,]<.1)
p_coeffRV <- mean(foo[2,]<.1)
return(c(p_dcov,p_coeffRV))
}
estim_puissance_test(5)
cov
n = 5
XY <- rmvnorm(n,sigma=cov)
XY
X <- XY[,c(1:p)]
Y <- XY[,c(p+1:p+q)]
c(p+1:p+q)
p
c(p+1:p+q)
p+q
c(5:10)
p+1:p+q
(p+1)=(p+q)
(p+1):(p+q)
library(energy)
p <- 5
q<-5
I <- diag(p+q)
K <- outer(rep(1,p+q),rep(1,p+q))
cov <- .9*I+.1*K
estim_puissance_test <- function(n){
aux <- function(i){
XY <- rmvnorm(n,sigma=cov)
X <- XY[,c(1:p)]
Y <- XY[,c((p+1 ):(p+q))]
return(c(dcov.test(X,Y)$p.value,coeffRV(X,Y)$p.value))
}
foo <- sapply(c(1:1000),aux)
p_dcov <- mean(foo[1,]<.1)
p_coeffRV <- mean(foo[2,]<.1)
return(c(p_dcov,p_coeffRV))
}
estim_puissance_test <- function(n){
estim_puissance_test(5)
X
Y
Y <- XY[,c((p+1 ):(p+q))]
c(dcov.test(X,Y)$p.value
)
dcov.test(X,Y)
coeffRV
?coeffRV
dcov.test(X,Y)
?dcov.test
library(energy)
p <- 5
q <- 5
I <- diag(p+q)
K <- outer(rep(1,p+q),rep(1,p+q))
cov <- .9*I+.1*K
estim_puissance_test <- function(n){
aux <- function(i){
XY <- rmvnorm(n,sigma=cov)
X <- XY[,c(1:p)]
Y <- XY[,c((p+1 ):(p+q))]
return(c(dcov.test(X,Y,R=10000)$p.value,coeffRV(X,Y)$p.value))
}
foo <- sapply(c(1:1000),aux)
p_dcov <- mean(foo[1,]<.1)
p_coeffRV <- mean(foo[2,]<.1)
return(c(p_dcov,p_coeffRV))
}
res <- as.data.frame(sapply(c(25,30,35,50,70,100),estim_puissance_test))
library(energy)
p <- 5
q <- 5
I <- diag(p+q)
K <- outer(rep(1,p+q),rep(1,p+q))
cov <- .9*I+.1*K
estim_puissance_test <- function(n){
aux <- function(i){
XY <- rmvnorm(n,sigma=cov)
X <- XY[,c(1:p)]
Y <- XY[,c((p+1 ):(p+q))]
return(c(dcov.test(X,Y,R=1000)$p.value,coeffRV(X,Y)$p.value))
}
foo <- sapply(c(1:100),aux)
p_dcov <- mean(foo[1,]<.1)
p_coeffRV <- mean(foo[2,]<.1)
return(c(p_dcov,p_coeffRV))
}
res <- as.data.frame(sapply(c(25,30,35,50,70,100),estim_puissance_test))
rownames(res) <- c("dCov","coeffRV")
colnames(res) <- c(25,30,35,50,70,100)
res
res = t(res)
res
res[,"n"] = rownames(res)
res[,3] = c(25,30,35,50,70,100)
res
res = cbind(c(25,30,35,50,70,100),res)
res
colnames(res)[1] <-"n"
res
ggplot(res)+aes(x=n)+geom_line(aes(y=dCov))+geom_line(aes(y=coeffRV))
ggplot(as.data.frame(res))+aes(x=n)+geom_line(aes(y=dCov))+geom_line(aes(y=coeffRV))
?aes
ggplot(as.data.frame(res))+aes(x=n)+geom_line(aes(y=dCov))+geom_line(aes(y=coeffRV,col=coeffRV))+ylab("Puissance")
ggplot(as.data.frame(res))+aes(x=n)+geom_line(aes(y=dCov))+geom_line(aes(y=coeffRV,lab=coeffRV))+ylab("Puissance")
ggplot(as.data.frame(res))+aes(x=n)+geom_line(aes(y=dCov))+geom_line(aes(y=coeffRV,label=coeffRV))+ylab("Puissance")
ggplot(as.data.frame(res))+aes(x=n)+geom_line(aes(y=dCov))+geom_line(aes(y=coeffRV,legend="coeffRV"))+ylab("Puissance")
ggplot(as.data.frame(res))+aes(x=n)+geom_line(aes(y=dCov),color="blue")+geom_line(aes(y=coeffRV,colour="red"))+ylab("Puissance")
ggplot(as.data.frame(res))+aes(x=n)+geom_line(aes(y=dCov),color="blue")+geom_line(aes(y=coeffRV,colour="red"))+ylab("Puissance")+scale_color_manual(values = c(cocastock = '#008B00', procterstock = '#FFFFFF'))
ggplot(as.data.frame(res))+aes(x=n)+geom_line(aes(y=dCov),color=dCov)+geom_line(aes(y=coeffRV,colour=coeffRV))+ylab("Puissance")+scale_color_manual(values = c(dCov = '#008B00', coeffRV = '#FFFFFF'))
ggplot(as.data.frame(res))+aes(x=n)+geom_line(aes(y=dCov),color=dCov)+geom_line(aes(y=coeffRV,colour=coeffRV))+ylab("Puissance")+scale_color_manual(values = c(dCov = '#008B00', coeffRV = '#FFFFFF'))
ggplot(as.data.frame(res))+aes(x=n)+geom_line(aes(y=dCov,color="dCov"))+geom_line(aes(y=coeffRV,colour="coeffRV"))+ylab("Puissance")+scale_color_manual(values =c(dCov = '#008B00', coeffRV = '#FFFFFF'))
ggplot(as.data.frame(res))+aes(x=n)+geom_line(aes(y=dCov,color="dCov"))+geom_line(aes(y=coeffRV,colour="coeffRV"))+ylab("Puissance")+scale_color_manual(values =c(dCov = '#008B00', coeffRV = '#0000F1'))
p <- 10
q <- 10
I <- diag(p)
estim_puissance_test <- function(n){
aux <- function(i){
X <- rmvnorm(n,sigma=I)
Y <- log(X**2)
return(c(dcov.test(X,Y,R=1000)$p.value,coeffRV(X,Y)$p.value))
}
foo <- sapply(c(1:100),aux)
p_dcov <- mean(foo[1,]<.1)
p_coeffRV <- mean(foo[2,]<.1)
return(c(p_dcov,p_coeffRV))
}
res <- as.data.frame(sapply(c(25,30,35,50,70,100),estim_puissance_test))
rownames(res) <- c("dCov","coeffRV")
colnames(res) <- c(25,30,35,50,70,100)
res = t(res)
res = cbind(c(25,30,35,50,70,100),res)
colnames(res)[1] <-"n"
ggplot(as.data.frame(res))+aes(x=n)+geom_line(aes(y=dCov,color="dCov"))+geom_line(aes(y=coeffRV,colour="coeffRV"))+ylab("Puissance")+scale_color_manual(values =c(dCov = '#008B00', coeffRV = '#0000F1'))
source("https://bioconductor.org/biocLite.R")
biocLite("EBImage")
pca.image$eig
pca.image$eig[50]
pca.image$eig[50,3]
pca.image$eig[60,3]
scales::percent()
scales::percent(.1)
reconstruct <- function(k){
pca.ozone <- PCA(ozone,scale.unit=TRUE,ncp=k,quali.sup=13,graph=FALSE)
U = pca.ozone$svd$U
L = diag(pca.ozone$svd$vs[c(1:k)])
V = pca.ozone$svd$V
X_centered_scaled = U %*% L %*% t(V)
X_centered = sweep(X_centered_scaled,2,std,"*")
HatX = as.data.frame(sweep(X_centered,2,moy,"+"))
colnames(HatX) <- colnames(ozone)[c(1:12)]
return(HatX)
}
pca.ozone <- PCA(ozone,scale.unit=TRUE,quali.sup=13,graph=FALSE)
plot(pca.ozone,choix="var")
HatX2 = reconstruct(2)
HatX3 = reconstruct(3)
HatX4 = reconstruct(4)
ozone <- as.data.frame(read_delim("data/ozone.txt"," ", escape_double = FALSE, trim_ws = TRUE))
moy = colMeans(ozone[,c(1:12)])
std = sqrt(colMeans(ozone[,c(1:12)]**2)-moy**2)
data = as.matrix(ozone[,c(1:12)])
data_centered <- sweep(data,2,moy)
data_centered_scaled <- as.matrix(sweep(data_centered,2,std,"/"))
reconstruct <- function(k){
pca.ozone <- PCA(ozone,scale.unit=TRUE,ncp=k,quali.sup=13,graph=FALSE)
U = pca.ozone$svd$U
L = diag(pca.ozone$svd$vs[c(1:k)])
V = pca.ozone$svd$V
X_centered_scaled = U %*% L %*% t(V)
X_centered = sweep(X_centered_scaled,2,std,"*")
HatX = as.data.frame(sweep(X_centered,2,moy,"+"))
colnames(HatX) <- colnames(ozone)[c(1:12)]
return(HatX)
}
pca.ozone <- PCA(ozone,scale.unit=TRUE,quali.sup=13,graph=FALSE)
plot(pca.ozone,choix="var")
HatX2 = reconstruct(2)
HatX3 = reconstruct(3)
HatX4 = reconstruct(4)
plot(ozone[,"maxO3y"], type = "l")
lines(HatX2[,"maxO3y"], col = 2)
plot(ozone[,"maxO3y"], type = "l")
lines(HatX2[,"maxO3y"], col = 2)
lines(HatX3[,"maxO3y"],col=3)
plot(ozone[,"maxO3y"], type = "l")
lines(HatX2[,"maxO3y"], col = 2)
lines(HatX3[,"maxO3y"],col=3)
lines(HatX4[,"maxO3y"],col=4)
plot(ozone[,"maxO3"], type = "l")
lines(HatX2[,"maxO3"], col = 2)
lines(HatX3[,"maxO3"],col=3)
lines(HatX4[,"maxO3"],col=4)
plot(ozone[,"maxO3y"], type = "l")
lines(HatX2[,"maxO3y"], col = 2)
lines(HatX3[,"maxO3y"],col=3)
lines(HatX4[,"maxO3y"],col=4)
plot(ozone[,"T9"], type = "l")
lines(HatX2[,"T9"], col = 2)
lines(HatX3[,"T9"],col=3)
lines(HatX4[,"T9"],col=4)
plot(ozone[,"Ne12"], type = "l")
lines(HatX2[,"Ne12"], col = 2)
lines(HatX3[,"Ne12"],col=3)
lines(HatX4[,"Ne12"],col=4)
res.ferti.pca$ind$contrib
pca.ferti
res.ferti.pca
res.ferti.pca$var$cor
permutation_test_rv <- function(X,Y){
aux <- function(){
myX = X[sample.int(nrow(X)),]
return(coeffRV(myX,Y)$rv)
}
RV_distrib = as.data.frame(sapply(c(1:10000),function(i) aux()))
colnames(RV_distrib)[1] <- "RV"
rv <- coeffRV(X,Y)$rv
plot <- ggplot(RV_distrib)+aes(x=RV,y=..density..)+geom_density()+ylab("")+geom_vline(xintercept = rv)
p_value <- mean(RV_distrib$RV>=rv)
return(list(p_value=p_value,plot=plot))
}
test_sc = permutation_test_rv(student_wine,consumer_wine)
print(test_sc$plot)
print(test_sc$p_value)
print(coeffRV(student_wine,consumer_wine)$p.value)
test_se = permutation_test_rv(student_wine,expert_wine)
print(test_se$plot)
print(test_se$p_value)
print(coeffRV(student_wine,expert_wine)$p.value)
test_ce = permutation_test_rv(consumer_wine,expert_wine)
print(test_ce$plot)
print(test_ce$p_value)
print(coeffRV(consumer_wine,expert_wine)$p.value)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(FactoMineR)
library(readr)
data <- as.data.frame(read_csv("data/train.csv"))
rownames(data) <- data$id
data$id <- NULL
bin_var <- which(grepl("^.*bin$",colnames(data)))
cat_var <- which(grepl("^.*cat$",colnames(data)))
quanti_var <- which(!(grepl("^.*bin$",colnames(data))) & !(grepl("^.*cat$",colnames(data))))
quanti_var <- quanti_var[c(2:length(quanti_var))]
res.pca <- PCA(data[c(1:1000),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=2)
plot(res.pca,habillage=1,invisible="quali",label="quali")
idx_0 = which(data$predict==0)
idx_1 = which(data$predict==1)
length(idx_1)
idx_0 = which(data$target==0)
idx_1 = which(data$target==1)
length(idx_1)
length(idx_0)
?Sample
?sample
idx_0 = sample(which(data$target==0),N)
idx_1 = sample(which(data$target==1),N)
N = 1000
idx_0 = sample(which(data$target==0),N)
idx_1 = sample(which(data$target==1),N)
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=2)
plot(res.pca,habillage=1,invisible="quali",label="quali")
N = 100
idx_0 = sample(which(data$target==0),N)
idx_1 = sample(which(data$target==1),N)
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=2)
plot(res.pca,habillage=1,invisible="quali",label="quali")
res.pca$ind$contrib
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=2)
plot(res.pca,habillage=1,invisible="quali",label="quali")
N = 1000
idx_0 = sample(which(data$target==0),N)
idx_1 = sample(which(data$target==1),N)
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=2)
plot(res.pca,habillage=1,invisible="quali",label="quali")
plot(res.pca,habillage=1,invisible="quali",label="quali",alpha=.5)
?plot.PCA
plot(res.pca,habillage=1,invisible="quali",label="quali",alpha=.5,select="contrib 100")
plot(res.pca,habillage=1,invisible="quali",label="quali",alpha=.5,select="contrib 10")
plot(res.pca,habillage=1,label="quali",alpha=.5,select="contrib 10")
plot(res.pca,habillage=1,label="quali",alpha=.5,select="contrib 10",invisible="quali")
?plot.PCA
plot(res.pca,axes=c(1:3),habillage=1,label="quali",invisible="quali")
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=5)
plot(res.pca,axes=c(1:3),habillage=1,label="quali",invisible="quali")
plot(res.pca,axes=c(1:3),habillage=1,label="quali",invisible="quali")
plot(res.pca,axes=c(1:3),habillage=1,invisible="quali")
plot(res.pca,axes=c(1:3),habillage=1,invisible="quali",label=c("quali"))
plot(res.pca,axes=c(1:3),habillage=1,invisible="quali",label=c(""))
plot(res.pca,axes=c(1:3),habillage=1,invisible="quali",label="none")
plot(res.pca,axes=c(1:3),habillage=1,invisible="quali",label="ind.sup")
plot(res.pca,axes=c(1:3),habillage=1,invisible="quali")
plot(res.pca,habillage=1,invisible="quali")
idx_0
idx_1
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=5)
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=5,graph=FALSE)
plot(res.pca,habillage=1,invisible="quali")
plot.PCA(res.pca,habillage=1,invisible="quali")
plot.PCA(res.pca,habillage=1)
data$target = as.factor(data$target)
N = 1000
idx_0 = sample(which(data$target==0),N)
idx_1 = sample(which(data$target==1),N)
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=5,graph=FALSE)
plot.PCA(res.pca,habillage=1)
plot.PCA(res.pca,habillage=1,label="none")
plot.PCA(res.pca,habillage=1,label="none",invisible="quali")
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=5,graph=FALSE)
plot.PCA(res.pca,habillage=1,label="none",invisible="quali")
idx_0 = sample(which(data$target==0),N_0)
idx_1 = sample(which(data$target==1),N_1)
N_0 = 0
N_1 = 1000
idx_0 = sample(which(data$target==0),N_0)
idx_1 = sample(which(data$target==1),N_1)
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=5,graph=FALSE)
plot.PCA(res.pca,habillage=1,label="none",invisible="quali")
plot.PCA(res.pca,c(1:3),habillage=1,label="none",invisible="quali")
plot.PCA(res.pca,c(1:3),habillage=1,label="none",invisible="quali")
plot.PCA(res.pca,axes=c(1:3),habillage=1,label="none",invisible="quali")
?plot.PCA
plot.PCA(res.pca,axes=c(1,3),habillage=1,label="none",invisible="quali")
plot.PCA(res.pca,axes=c(1,4),habillage=1,label="none",invisible="quali")
plot.PCA(res.pca,axes=c(1,5),habillage=1,label="none",invisible="quali")
plot.PCA(res.pca,axes=c(1,5),habillage=1,label="none",invisible="quali")
plot.PCA(res.pca,axes=c(1,5),habillage=1,label="none",invisible="quali")
plot.PCA(res.pca,habillage=1,label="none",invisible="quali")
N_0 = 100
N_1 = 1000
idx_0 = sample(which(data$target==0),N_0)
idx_1 = sample(which(data$target==1),N_1)
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=5,graph=FALSE)
plot.PCA(res.pca,habillage=1,label="none",invisible="quali")
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=5,graph=FALSE)
plot.PCA(res.pca,habillage=1,label="none",invisible="quali")
na_find <- function(v){
v[which(v<0)] <- NA
return(v)
}
na_find <- function(v){
v[which(v<0)] <- NA
}
v = c(1,-1,2)
na_find(v)
v
na_find <- function(v){
v[which(v<0)] <- NA
return(v)
}
na_find(v)
data <- as.data.frame(data,na_find)
data <- as.data.frame(sapply(data,na_find))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(FactoMineR)
library(readr)
data <- as.data.frame(read_csv("data/train.csv"))
rownames(data) <- data$id
data$id <- NULL
na_find <- function(v){
v[which(v==-1)] <- NA
return(v)
}
data <- as.data.frame(sapply(data,na_find))
N_0 = 100
N_1 = 1000
idx_0 = sample(which(data$target==0),N_0)
idx_1 = sample(which(data$target==1),N_1)
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=5,graph=FALSE)
plot.PCA(res.pca,habillage=1,label="none",invisible="quali")
v[which(v==-1)] <- NA
data$id <- NULL
data <- as.data.frame(read_csv("data/train.csv"))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(FactoMineR)
library(readr)
data <- as.data.frame(read_csv("data/train.csv"))
rownames(data) <- data$id
data$id <- NULL
na_find <- function(v){
v[which(v==-1)] <- NA
return(v)
}
data <- as.data.frame(sapply(data,na_find))
bin_var <- which(grepl("^.*bin$",colnames(data)))
cat_var <- which(grepl("^.*cat$",colnames(data)))
quanti_var <- which(!(grepl("^.*bin$",colnames(data))) & !(grepl("^.*cat$",colnames(data))))
quanti_var <- quanti_var[c(2:length(quanti_var))]
data$target = as.factor(data$target)
N_0 = 100
N_1 = 1000
idx_0 = sample(which(data$target==0),N_0)
idx_1 = sample(which(data$target==1),N_1)
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=5,graph=FALSE)
plot.PCA(res.pca,habillage=1,label="none",invisible="quali")
?plot.PCA
plot.PCA(res.pca,habillage=1,label="none",invisible="quali",col.hab=c("black","green"))
plot.PCA(res.pca,habillage=1,label="none",invisible="quali",col.hab=c("red","green"))
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=5,graph=FALSE)
plot.PCA(res.pca,habillage=1,label="none",invisible="quali",col.hab=c("red","green"))
plot.PCA
?plot.PCA
plot(res.pca,choix="var",select="cos2 0.6")
plot(res.pca,choix="var",select="cos2 0.5")
plot(res.pca,choix="var",select="cos2 0.5")
length(quanti_var)
plot(res.pca,choix="var",select="cos2 0.6")
plot.PCA(res.pca,habillage=1,label="none",invisible="quali",col.hab=c("red","green"))
N_0 = 100
N_1 = 0
idx_0 = sample(which(data$target==0),N_0)
idx_1 = sample(which(data$target==1),N_1)
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=5,graph=FALSE)
plot.PCA(res.pca,habillage=1,label="none",invisible="quali",col.hab=c("red","green"))
plot(res.pca,choix="var",select="cos2 0.6")
N_0 = 1000
N_1 = 0
idx_0 = sample(which(data$target==0),N_0)
idx_1 = sample(which(data$target==1),N_1)
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=5,graph=FALSE)
plot.PCA(res.pca,habillage=1,label="none",invisible="quali",col.hab=c("red","green"))
plot(res.pca,choix="var",select="cos2 0.6")
N_0 = 1000
N_1 = 10
idx_0 = sample(which(data$target==0),N_0)
idx_1 = sample(which(data$target==1),N_1)
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=5,graph=FALSE)
plot.PCA(res.pca,habillage=1,label="none",invisible="quali",col.hab=c("red","green"))
plot(res.pca,choix="var",select="cos2 0.6")
plot.PCA(res.pca,habillage=1,label="none",invisible="quali",col.hab=c("black","red"))
N_0 = 1000
N_1 = 100
idx_0 = sample(which(data$target==0),N_0)
idx_1 = sample(which(data$target==1),N_1)
res.pca <- PCA(data[c(idx_0,idx_1),c(1,quanti_var)],scale.unit=TRUE,quali.sup=c(1),ncp=5,graph=FALSE)
plot.PCA(res.pca,habillage=1,label="none",invisible="quali",col.hab=c("black","red"))
plot(res.pca,choix="var",select="cos2 0.6")
source('~/Documents/Documents/Ecole polytechnique/3A/S1/INF554/INF554_Kaggle/proj1/pca.R')
